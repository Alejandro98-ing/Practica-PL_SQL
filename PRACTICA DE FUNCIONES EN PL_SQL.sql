CREATE OR REPLACE FUNCTION DEP_SALARIOS (DEPAR NUMBER) 
RETURN NUMBER
IS
    SALARY NUMBER;
    DEPART DEPARTMENTS.DEPARTMENT_ID%TYPE;
    NUM_EMPLE NUMBER;
BEGIN
    SELECT DEPARTMENT_ID INTO DEPART FROM DEPARTMENTS 
    WHERE DEPARTMENT_ID=DEPAR;
    SELECT COUNT(*) INTO NUM_EMPLE FROM EMPLOYEES 
    WHERE DEPARTMENT_ID=DEPAR;
    IF DEPAR>0 THEN
    
        SELECT SUM(SALARY) INTO SALARY FROM EMPLOYEES 
        WHERE DEPARTMENT_ID=DEPAR GROUP BY DEPARTMENT_ID;
    ELSE
        RAISE_APPLICATION_ERROR (-20730,
        'El departamento existe, pero no hay empleados ' || DEPAR);
    END IF;
    RETURN SALARY;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR (-20730,
    'No existe el departamento ' || DEPAR);
END;

SET SERVEROUTPUT ON
DECLARE
    SAL NUMBER;
    DEPT NUMBER:=100;
BEGIN
    SAL:=DEP_SALARIOS(DEPT);
    DBMS_OUTPUT.PUT_LINE('El salario total del departamento ' ||
    DEPT || ' es: ' || SAL);
END;
/
--Ejercicio 2
CREATE OR REPLACE FUNCTION SALARIOS_DEP(DEP_ID NUMBER,
    NUM_EMPLEADOS OUT NUMBER) RETURN NUMBER
IS
    SAL NUMBER;
    DEPT NUMBER;
BEGIN
    SELECT DEPARTMENT_ID INTO DEPT 
    FROM DEPARTMENTS
    WHERE DEPARTMENT_ID=DEP_ID;
    SELECT SUM(SALARY),COUNT(SALARY) INTO SAL,NUM_EMPLEADOS 
    FROM EMPLOYEES 
    WHERE DEPARTMENT_ID=DEP_ID GROUP BY DEPARTMENT_ID;
    RETURN SAL;
END;
/

SET SERVEROUTPUT ON
DECLARE
    TOTAL_SAL NUMBER;
    NUM_EMPLE NUMBER;
    DEPT NUMBER:=110;
BEGIN
    TOTAL_SAL:=SALARIOS_DEP(DEPT,NUM_EMPLE);
    DBMS_OUTPUT.PUT_LINE('El salario total del departamento ' ||
    DEPT || ' es: ' || TOTAL_SAL);
    DBMS_OUTPUT.PUT_LINE('El número total de empleados recabados es : ' || NUM_EMPLE);
END;
/

--Ejercicio 3
CREATE OR REPLACE FUNCTION CREAR_REGION (nombre VARCHAR2)
RETURN NUMBER IS
    regiones NUMBER;
    NOM_REGION VARCHAR2(100);
BEGIN
    SELECT REGION_NAME INTO NOM_REGION 
    FROM REGIONS
    WHERE REGION_NAME=UPPER(NOMBRE);
    RAISE_APPLICATION_ERROR(-20321,'Esta región ya existe!');
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        SELECT MAX(REGION_ID)+1 INTO REGIONES from REGIONS;
        INSERT INTO REGIONS (region_id,region_name) VALUES
        (regiones,UPPER(nombre));
    RETURN REGIONES;
END;
/

DECLARE
    N_REGION NUMBER;
BEGIN
    N_REGION:=crear_region('NORMANDIA');
    DBMS_OUTPUT.PUT_LINE('EL NUMERO ASIGNADO ES:'||N_REGION);
END;