--Ejercicio 1
SET SERVEROUTPUT ON
DECLARE
    nombre_empleado EMPLOYEES.FIRST_NAME%TYPE;
BEGIN
    SELECT --SOLO PUEDE DEVOLVER UNA FILA
        FIRST_NAME INTO nombre_empleado
        FROM
        EMPLOYEES
        WHERE EMPLOYEE_ID=70;
        DBMS_OUTPUT.PUT_LINE(nombre_empleado);
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('ERROR, EMPLEADO INEXISTENTE');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR INDEFINIDO');
            COMMIT;
END;

--Ejercicio 2
SET SERVEROUTPUT ON
DECLARE
    nombre_empleado EMPLOYEES.FIRST_NAME%TYPE;
BEGIN
    SELECT --SOLO PUEDE DEVOLVER UNA FILA
        FIRST_NAME INTO nombre_empleado
        FROM
        EMPLOYEES
        WHERE EMPLOYEE_ID>100;
        DBMS_OUTPUT.PUT_LINE(nombre_empleado);
        EXCEPTION
        WHEN TOO_MANY_ROWS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR, DEMASIADOS EMPLEADOS EN LA CONSULTA');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR INDEFINIDO');
END;

--Ejercicio 3
SET SERVEROUTPUT ON
DECLARE
    salario EMPLOYEES.SALARY%TYPE;
BEGIN
    SELECT --SOLO PUEDE DEVOLVER UNA FILA
        SALARY INTO salario
        FROM
        EMPLOYEES
        WHERE EMPLOYEE_ID=100;
        DBMS_OUTPUT.PUT_LINE(salario/0);
        EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE(SQLCODE);
            DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

--Ejercicio 4
SET SERVEROUTPUT ON
DECLARE
    DUPLICADO EXCEPTION;
    PRAGMA EXCEPTION_INIT(DUPLICADO,-00001);
    codigo NUMBER:=1;
    nombre_region VARCHAR(50):='Europe';
BEGIN
    INSERT INTO REGIONS VALUES (codigo,nombre_region);
    EXCEPTION
        WHEN DUPLICADO THEN
            DBMS_OUTPUT.PUT_LINE('Clave duplicada, intente otra');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR INDEFINIDO');
END;