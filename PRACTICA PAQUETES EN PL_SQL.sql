CREATE OR REPLACE PACKAGE REGIONESS IS
    PROCEDURE ALTA_REGION(CODIGO_AR NUMBER, NOMBRE_REGION VARCHAR2);
    PROCEDURE BAJA_REGION(CODIGO_BR NUMBER);
    PROCEDURE MOD_REGION(CODIGO_MR NUMBER, NOMBRE_R VARCHAR2);
    
    FUNCTION CON_REGION(CODIGO_R NUMBER) RETURN VARCHAR2;
END REGIONESS;

CREATE OR REPLACE PACKAGE BODY REGIONESS IS
    FUNCTION EXISTE_REGION(ID_R NUMBER, NOMB_R VARCHAR2) RETURN BOOLEAN IS
        CURSOR CURSOR1 IS
        SELECT REGION_NAME, REGION_ID FROM REGIONS;
    BEGIN
        FOR i IN CURSOR1 LOOP
            IF i.REGION_NAME = NOMB_R AND i.REGION_ID = ID_R THEN
            RETURN true;
            END IF;
        END LOOP;
        RETURN false;
    END;
    
    PROCEDURE ALTA_REGION ( CODIGO_AR NUMBER,NOMBRE_REGION VARCHAR2 ) IS
        DEVUELTO BOOLEAN;
    BEGIN
        DEVUELTO := EXISTE_REGION(CODIGO_AR,NOMBRE_REGION);
        IF DEVUELTO = false THEN
            INSERT INTO REGIONS ( REGION_ID,REGION_NAME ) VALUES (CODIGO_AR,NOMBRE_REGION );
            DBMS_OUTPUT.PUT_LINE('Inserción correcta');
        ELSE
            DBMS_OUTPUT.PUT_LINE('La región ya existe.');
        END IF;
        EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('La ID YA EXISTE (duplicada)');
    END;
    
    PROCEDURE BAJA_REGION ( CODIGO_BR NUMBER ) IS
        DEVUELTO BOOLEAN;
        OTRO VARCHAR2(20);
    BEGIN
        SELECT REGION_NAME INTO OTRO FROM REGIONS
        WHERE REGION_ID = CODIGO_BR;
        DEVUELTO := EXISTE_REGION(CODIGO_BR,OTRO);
        IF DEVUELTO = true THEN
            DELETE FROM REGIONS 
            WHERE REGION_ID = CODIGO_BR;
            DBMS_OUTPUT.PUT_LINE('Región con ID ' || CODIGO_BR || ' borrada');
        END IF;
        EXCEPTION
        WHEN no_data_found THEN
        DBMS_OUTPUT.PUT_LINE('La región no existe!');
    END;
    
    PROCEDURE MOD_REGION (CODIGO_MR NUMBER, NOMBRE_R VARCHAR2) IS
        DEVUELTO BOOLEAN;
    BEGIN
        DEVUELTO := EXISTE_REGION(CODIGO_MR,NOMBRE_R);
        IF DEVUELTO = true THEN
            UPDATE REGIONS SET REGION_NAME = NOMBRE_R
            WHERE REGION_ID = CODIGO_MR;
            DBMS_OUTPUT.PUT_LINE('La región ha sido actualizada.');
        ELSE
            DBMS_OUTPUT.PUT_LINE('La región no existe.');
        END IF;
    END;
    
    FUNCTION CON_REGION(CODIGO_R NUMBER) RETURN VARCHAR2 IS
        NOMBRE_DEVOLVER VARCHAR2(20);
    BEGIN
        SELECT REGION_NAME INTO NOMBRE_DEVOLVER FROM REGIONS
        WHERE REGION_ID = CODIGO_R;
        RETURN NOMBRE_DEVOLVER;
    END;
END REGIONESS;
/

EXECUTE REGIONESS.MOD_REGION(7,'ATLANTIS');
EXECUTE REGIONESS.BAJA_REGION(10);
EXECUTE REGIONESS.ALTA_REGION(10,'OLIMPO');
/

SELECT * FROM regions;
DELETE FROM regions WHERE region_id > 4;
ROLLBACK;