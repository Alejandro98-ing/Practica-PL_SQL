--Ejercicio 1
CREATE OR REPLACE TRIGGER BORREMPL BEFORE
    DELETE ON EMPLOYEES FOR EACH ROW
BEGIN
    IF :OLD.JOB_ID LIKE ( '%CLERK' ) THEN
    RAISE_APPLICATION_ERROR(-20320,'NO SE PUEDE ELIMINAR ID CLERK');
    END IF;
END;
/
DELETE FROM EMPLOYEES WHERE JOB_ID LIKE ('%CLERK');
/
--Ejercicio 2
CREATE TABLE AUDITORIA (USUARIO VARCHAR(50), 
FECHA DATE, 
SALARIO_ANTIGUO NUMBER, 
SALARIO_NUEVO NUMBER); 

--Ejercicio 3
CREATE TRIGGER T_GUARDAR_AUD BEFORE INSERT ON REGIONS
BEGIN
    INSERT INTO AUDITORIA (USUARIO, FECHA)
    VALUES (USER,SYSDATE);
END;
/
INSERT INTO REGIONS VALUES (20,'Prueba');
SELECT * FROM AUDITORIA
/
--Ejercicio 4
CREATE OR REPLACE TRIGGER T_SALARIO
BEFORE UPDATE ON EMPLOYEES
FOR EACH ROW
BEGIN
     IF :NEW.SALARY< :OLD.SALARY THEN
     RAISE_APPLICATION_ERROR(-20000,'NO SE PUEDE BAJAR EL SALARIO');
     END IF;
     IF :NEW.SALARY> :OLD.SALARY THEN
     INSERT INTO AUDITORIA VALUES
     (USER,SYSDATE,:OLD.SALARY,:NEW.SALARY);
     END IF;
END;
/
SELECT * FROM EMPLOYEES;
UPDATE EMPLOYEES SET SALARY=100 WHERE EMPLOYEE_ID=100;
/
--Ejercicio 5
CREATE OR REPLACE TRIGGER TRIGGER1
BEFORE INSERT ON DEPARTMENTS
FOR EACH ROW
DECLARE
    DEP_ID NUMBER;
BEGIN
     SELECT DEPARTMENT_ID INTO DEP_ID FROM DEPARTMENTS WHERE
     DEPARTMENT_ID=:new.DEPARTMENT_ID;
     RAISE_APPLICATION_ERROR(-20000,'Departamento ya existe');
    
     EXCEPTION
     WHEN NO_DATA_FOUND THEN
         IF :new.LOCATION_ID IS NULL THEN
            :new.LOCATION_ID:=1700;
         END IF;
         IF :new.MANAGER_ID IS NULL THEN
            :new.MANAGER_ID:=200;
         END IF;
END;
/
INSERT INTO DEPARTMENTS VALUES(25,'INVESTIGACION',NULL,NULL);
SELECT * FROM DEPARTMENTS;